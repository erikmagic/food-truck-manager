import java.util.ArrayList;

public class Outside {

	
	
	public static void main(String[] args) {
		
		 Inside  inside = new Inside();
		
		inside.test_arrayString();
		System.out.println(inside.hold_data.toString());;
		
		
		
	}

	private static class Inside {

		private ArrayList<Double> hold_data = new ArrayList<>();
		private ArrayList<Double> tempList = new ArrayList<>();
		private ArrayList<Double> filter_list = new ArrayList<>();
		private int sensorSize, hold_data_size = 400, filter_list_size = 5, distance;
		double answer;
		double temp;

		
		public void test_arrayString() {
			
			double value = 0;
			for (int out = 0; out < 500; out++) {
				value = Math.random() * 250;
				// fill a bit the array at the beginning for median computations to work
				if ( hold_data.size() <= 5) hold_data.add(value);
				else {
						value = filter(hold_data, out-3); // always 3 values behind 
						hold_data.add(value);
	
					}
				}
			}
		

		public double filter(ArrayList<Double> list, int index) {
			
			// make sure values above 250 are 250
			if (list.get(index) > 250) {
				list.set(index,(double) 250);
			}
			// collect the 2 elements that are under the index and the 2 above
			for (int i = -2; i <= 2; i++) {
				if (index < 2 && i < 0 ) filter_list.add(list.get(index + i + 198));
				filter_list.add(list.get(index + i));
			}
			// sort the newly formed list
			sort_list(filter_list);
			
			// replace the distance value by the median of the list
			answer = filter_list.get(2);

			// clears the list
			filter_list.clear();

			// returns the distance to be changed in the list ArrayList
			return answer;
		}

		/**
		 * Simple bubble sort algorithm, sorts the specified array_list
		 * 
		 * @param filter_list2
		 * 
		 */
		private void sort_list(ArrayList<Double> filter_list2) {
			for (int out_loop = 0; out_loop < filter_list_size - 2; out_loop++) {
				for (int in_loop = out_loop; in_loop < filter_list_size - 1; in_loop++) {
					if (filter_list2.get(out_loop) > filter_list2.get(in_loop + 1)) {
						temp = filter_list2.get(out_loop);
						filter_list2.set(out_loop, filter_list2.get(in_loop + 1));
						filter_list2.set(in_loop + 1, temp);

					}
				}
			}
		}
	}
}